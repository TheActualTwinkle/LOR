services:
  database:
    build:
      context: .
      dockerfile: Lor.DatabaseApp/Presentation/DatabaseApp.WebApi/Dockerfile
    ports:
      - "31401:31401"
    environment:
      - ASPNETCORE_URLS=${DATABASE_COMMUNICATION_URL}
      - ASPNETCORE_ENVIRONMENT=Production

  telegrambot:
    build:
      context: .
      dockerfile: Lor.TelegramBotApp/Presentation/TelegramBotApp.Api/Dockerfile
    environment:
      - TelegramSettings:BotToken=${TELEGRAM_BOT_TOKEN}
      - Profiles:Database-http:ApplicationUrl=${DATABASE_COMMUNICATION_URL}
      - ConnectionStrings:Redis=redis:6379
    depends_on:
      redis:
        condition: service_healthy

  groupschedule:
    build:
      context: .
      dockerfile: Lor.GroupScheduleApp/Presentation/GroupScheduleApp.Api/Dockerfile
    environment:
      - Profiles:Database-http:ApplicationUrl=${DATABASE_COMMUNICATION_URL}

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 15s
      timeout: 15s
      retries: 3