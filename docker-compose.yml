services:
  database:
    image: postgres:latest
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - PGPORT=31400
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    ports:
      - "31400:31400"

  databaseapp:
    build:
      context: .
      dockerfile: Lor.DatabaseApp/Presentation/DatabaseApp.WebApi/Dockerfile
    ports:
      - "31401:31401"
    environment:
      - ASPNETCORE_URLS=${DATABASE_COMMUNICATION_URL}
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings:DefaultConnection=Host=database:31400;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - ConnectionStrings:Redis=redis:6379
      - RabbitMqSettings:Host=${RABBITMQ_HOST}
      - RabbitMqSettings:Username=${RABBITMQ_USER}
      - RabbitMqSettings:Password=${RABBITMQ_PASSWORD}
    depends_on:
          redis:
            condition: service_healthy
          rabbitmq:
            condition: service_healthy
        
  telegrambot:
    build:
      context: .
      dockerfile: Lor.TelegramBotApp/Presentation/TelegramBotApp.Api/Dockerfile
    environment:
      - TelegramSettings:BotToken=${TELEGRAM_BOT_TOKEN}
      - Profiles:Database-http:ApplicationUrl=${DATABASE_COMMUNICATION_URL}
      - RabbitMqSettings:Host=${RABBITMQ_HOST}
      - RabbitMqSettings:Username=${RABBITMQ_USER}
      - RabbitMqSettings:Password=${RABBITMQ_PASSWORD}
    depends_on:
          rabbitmq:
            condition: service_healthy

  groupschedule:
    build:
      context: .
      dockerfile: Lor.GroupScheduleApp/Presentation/GroupScheduleApp.Api/Dockerfile
    environment:
      - Profiles:Database-http:ApplicationUrl=${DATABASE_COMMUNICATION_URL}

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 15s
      timeout: 15s
      retries: 3

  rabbitmq:
    image: rabbitmq:management
    hostname: ${RABBITMQ_HOST}
    volumes:
      - ./.containers/queue/data/:/var/lib/rabbitmq
      - ./.containers/queue/log/:/var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD}
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 15s
      timeout: 15s
      retries: 3